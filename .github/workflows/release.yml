name: 'build and deploy to heroku(test) && docker hub'

on:
  release:
    types: [published]

jobs:
  push_to_docker_hub:
    name: 'Build production image & Push to Docker hub'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build mvn deps image
        run: docker build -f Dockerfile.deps . -t deps:latest

      - name: Build app image
        run: |
             export JAVA_APP_VERSION=${{ github.event.release.tag_name }}
             docker build --build-arg JAVA_APP_VERSION . -f Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/shop_inventory_pos:${{ github.event.release.tag_name }}
             docker tag ${{ secrets.DOCKERHUB_USERNAME }}/shop_inventory_pos:${{ github.event.release.tag_name }} ${{ secrets.DOCKERHUB_USERNAME }}/shop_inventory_pos:latest

      - name: Build image for heroku
        run:  docker build --build-arg JAVA_APP_VERSION . -f Dockerfile.heroku -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web --target heroku

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push app image to DockerHub
        run: docker push --all-tags ${{ secrets.DOCKERHUB_USERNAME }}/shop_inventory_pos

      - name: Login to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
            heroku_email: ${{ secrets.HEROKU_EMAIL }}
            heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
            heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
            justlogin: true

      - name: Deploy to heroku
        run: |
             heroku container:login
             docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
             heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}

version: '3.8'

services:
  app:
    build: .
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ./usersUpos:/usr/src/app/usersUpos
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_DRIVER=${DB_DRIVER}
      - HIBERNATE_DIALECT=${HIBERNATE_DIALECT}
    command: ["java", "-jar", "./Shop_Inventory_POS-1.0.jar"]
    depends_on:
      postgres:
        condition: service_healthy
    container_name: shop_pos

  postgres:
    image: postgres:13.2-alpine
    restart: unless-stopped
    expose:
      - ${DB_PORT}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    command: ["-p", "${DB_PORT}"]

  flyway:
    image: flyway/flyway:9.2.1-alpine
    volumes:
      - ./src/main/resources/db/migration:/flyway/sql
      - ./flyway:/flyway/conf
    command: ["migrate"]
    environment:
      - FLYWAY_URL=${DB_HOST}:${DB_PORT}/
      - FLYWAY_USER=${POSTGRES_USER}
      - FLYWAY_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 3450:8080
    container_name: admin
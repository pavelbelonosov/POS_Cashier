version: '3.8'

services:
  app:
    build:
      context: .
      args:
        - APP_NAME=${APP_NAME}
    restart: always
    expose:
      - 8080
    volumes:
      - ./usersUpos:${WORKDIR}/usersUpos
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${POSTGRES_USER}
      - DB_USER=${CLIENT_DB_USER}
      - DB_PASSWORD=${CLIENT_DB_USER_PASSWORD}
      - DB_SCHEMA=${POSTGRES_SCHEMA}
      - DB_DRIVER=${DB_DRIVER}
      - HIBERNATE_DIALECT=${HIBERNATE_DIALECT}
      - EMAIL_ROBOT_NAME=${EMAIL_ROBOT_NAME}
      - EMAIL_ROBOT_PASS=${EMAIL_ROBOT_PASS}
      - WORKDIR=${WORKDIR}
    command: ["java", "-jar", "./${APP_NAME}"]
    depends_on:
      postgres:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
    labels:
      com.centurylinklabs.watchtower.enable: "true"

  postgres:
    image: postgres:13.2-alpine
    restart: unless-stopped
    expose:
      - ${DB_PORT}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    command: ["-p", "${DB_PORT}"]

  flyway:
    image: flyway/flyway:9.2.1-alpine
    volumes:
      - ./src/main/resources/db/migration:/flyway/sql
      - ./flyway.conf:/flyway/conf/flyway.conf
    command: ["migrate"]
    environment:
      - FLYWAY_URL=${DB_HOST}:${DB_PORT}/
      - FLYWAY_USER=${POSTGRES_USER}
      - FLYWAY_PASSWORD=${POSTGRES_PASSWORD}
      - FLYWAY_SCHEMAS=${POSTGRES_SCHEMA}
    depends_on:
      postgres:
        condition: service_healthy

  adminer:
    image: adminer
    restart: unless-stopped
    expose:
      - 8080
    container_name: admin

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app

  watchtower:
    image: containrrr/watchtower
    environment:
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_LABEL_ENABLE=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: watchtower